{{ 'custom-carousel.css' | asset_url | stylesheet_tag }}

<div class="custom-carousel-wrapper page-width-none section custom-carousel-section" id="section-{{ section.id }}">
  <div class="custom-carousel" id="carousel-{{ section.id }}">
    <!-- Slide 1: Two columns desktop, single column mobile -->
    <div class="carousel-slide active" data-slide="1">
      {%- if section.settings.slide1_link != blank -%}
        <a href="{{ section.settings.slide1_link }}" class="slide-link" aria-label="Navigate to slide 1 link">
      {%- endif -%}
      <div class="slide-content two-columns">
        <!-- Desktop: Two columns -->
        <div class="column desktop-only">
          {%- if section.settings.slide1_image1 != blank -%}
            <img
              src="{{ section.settings.slide1_image1 | image_url: width: 800 }}"
              alt="{{ section.settings.slide1_image1.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide1_image1.width }}"
              height="{{ section.settings.slide1_image1.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Image 1</span>
            </div>
          {%- endif -%}
        </div>
        <div class="column desktop-only">
          {%- if section.settings.slide1_image2 != blank -%}
            <img
              src="{{ section.settings.slide1_image2 | image_url: width: 800 }}"
              alt="{{ section.settings.slide1_image2.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide1_image2.width }}"
              height="{{ section.settings.slide1_image2.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Image 2</span>
            </div>
          {%- endif -%}
        </div>
        <!-- Mobile: Single image -->
        <div class="column mobile-only">
          {%- if section.settings.slide1_mobile_image != blank -%}
            <img
              src="{{ section.settings.slide1_mobile_image | image_url: width: 800 }}"
              alt="{{ section.settings.slide1_mobile_image.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide1_mobile_image.width }}"
              height="{{ section.settings.slide1_mobile_image.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Mobile Image 1</span>
            </div>
          {%- endif -%}
        </div>
      </div>
      <!-- Desktop text overlay -->
      <div class="slide-text-overlay desktop-only">
        {%- if section.settings.slide1_text != blank -%}
          <p class="slide-small-text">{{ section.settings.slide1_text }}</p>
        {%- else -%}
          <p class="slide-small-text">Sample small text for slide 1</p>
        {%- endif -%}
        {%- if section.settings.slide1_title != blank -%}
          <h2 class="slide-title">{{ section.settings.slide1_title }}</h2>
        {%- else -%}
          <h2 class="slide-title">Sample Title One</h2>
        {%- endif -%}
      </div>
      {%- if section.settings.slide1_link != blank -%}
        </a>
      {%- endif -%}
    </div>

    <!-- Slide 2: Two columns desktop, single column mobile -->
    <div class="carousel-slide" data-slide="2">
      {%- if section.settings.slide2_link != blank -%}
        <a href="{{ section.settings.slide2_link }}" class="slide-link" aria-label="Navigate to slide 2 link">
      {%- endif -%}
      <div class="slide-content two-columns">
        <!-- Desktop: Two columns -->
        <div class="column desktop-only">
          {%- if section.settings.slide2_image1 != blank -%}
            <img
              src="{{ section.settings.slide2_image1 | image_url: width: 800 }}"
              alt="{{ section.settings.slide2_image1.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide2_image1.width }}"
              height="{{ section.settings.slide2_image1.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Image 3</span>
            </div>
          {%- endif -%}
        </div>
        <div class="column desktop-only">
          {%- if section.settings.slide2_image2 != blank -%}
            <img
              src="{{ section.settings.slide2_image2 | image_url: width: 800 }}"
              alt="{{ section.settings.slide2_image2.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide2_image2.width }}"
              height="{{ section.settings.slide2_image2.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Image 4</span>
            </div>
          {%- endif -%}
        </div>
        <!-- Mobile: Single image -->
        <div class="column mobile-only">
          {%- if section.settings.slide2_mobile_image != blank -%}
            <img
              src="{{ section.settings.slide2_mobile_image | image_url: width: 800 }}"
              alt="{{ section.settings.slide2_mobile_image.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide2_mobile_image.width }}"
              height="{{ section.settings.slide2_mobile_image.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Mobile Image 2</span>
            </div>
          {%- endif -%}
        </div>
      </div>
      <!-- Desktop text overlay -->
      <div class="slide-text-overlay desktop-only">
        {%- if section.settings.slide2_text != blank -%}
          <p class="slide-small-text">{{ section.settings.slide2_text }}</p>
        {%- else -%}
          <p class="slide-small-text">Sample small text for slide 2</p>
        {%- endif -%}
        {%- if section.settings.slide2_title != blank -%}
          <h2 class="slide-title">{{ section.settings.slide2_title }}</h2>
        {%- else -%}
          <h2 class="slide-title">Sample Title Two</h2>
        {%- endif -%}
      </div>
      {%- if section.settings.slide2_link != blank -%}
        </a>
      {%- endif -%}
    </div>

    <!-- Slide 3: One column desktop and mobile -->
    <div class="carousel-slide" data-slide="3">
      {%- if section.settings.slide3_link != blank -%}
        <a href="{{ section.settings.slide3_link }}" class="slide-link" aria-label="Navigate to slide 3 link">
      {%- endif -%}
      <div class="slide-content one-column">
        <!-- Desktop: Full width image -->
        <div class="column desktop-only">
          {%- if section.settings.slide3_image != blank -%}
            <img
              src="{{ section.settings.slide3_image | image_url: width: 1600 }}"
              alt="{{ section.settings.slide3_image.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide3_image.width }}"
              height="{{ section.settings.slide3_image.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Full Width Image</span>
            </div>
          {%- endif -%}
        </div>
        <!-- Mobile: Single image -->
        <div class="column mobile-only">
          {%- if section.settings.slide3_mobile_image != blank -%}
            <img
              src="{{ section.settings.slide3_mobile_image | image_url: width: 800 }}"
              alt="{{ section.settings.slide3_mobile_image.alt | escape }}"
              loading="lazy"
              width="{{ section.settings.slide3_mobile_image.width }}"
              height="{{ section.settings.slide3_mobile_image.height }}"
            >
          {%- else -%}
            <div class="placeholder-image">
              <span>Mobile Image 3</span>
            </div>
          {%- endif -%}
        </div>
      </div>
      <!-- Desktop text overlay -->
      <div class="slide-text-overlay desktop-only">
        {%- if section.settings.slide3_text != blank -%}
          <p class="slide-small-text">{{ section.settings.slide3_text }}</p>
        {%- else -%}
          <p class="slide-small-text">Sample small text for slide 3</p>
        {%- endif -%}
        {%- if section.settings.slide3_title != blank -%}
          <h2 class="slide-title">{{ section.settings.slide3_title }}</h2>
        {%- else -%}
          <h2 class="slide-title">Sample Title Three</h2>
        {%- endif -%}
      </div>
      {%- if section.settings.slide3_link != blank -%}
        </a>
      {%- endif -%}
    </div>
  </div>

  <!-- Status bars -->
  <div class="carousel-status-bars desktop-only">
    <div class="status-bar" data-slide="1">
      <div class="status-bar-fill"></div>
    </div>
    <div class="status-bar" data-slide="2">
      <div class="status-bar-fill"></div>
    </div>
    <div class="status-bar" data-slide="3">
      <div class="status-bar-fill"></div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    console.log('üé† Carousel initialization starting...');

    const sectionWrapper = document.getElementById('section-{{ section.id }}');
    if (!sectionWrapper) {
      console.error('‚ùå Section wrapper not found:', 'section-{{ section.id }}');
      return;
    }
    console.log('‚úÖ Found section wrapper:', sectionWrapper);

    const carousel = sectionWrapper.querySelector('#carousel-{{ section.id }}');
    if (!carousel) {
      console.error('‚ùå Carousel element not found:', 'carousel-{{ section.id }}');
      return;
    }
    console.log('‚úÖ Found carousel element:', carousel);

    const slides = carousel.querySelectorAll('.carousel-slide');
    console.log('üìä Found slides:', slides.length);
    // Removed indicators and navigation buttons
    let currentSlide = 1;
    let autoSlideInterval;
    // Progress animation using CSS transition for reliability

    function showSlide(slideNumber) {
      // Remove active class from all slides
      slides.forEach((slide) => slide.classList.remove('active'));

      // Add active class to current slide
      const targetSlide = carousel.querySelector(`[data-slide="${slideNumber}"]`);

      if (targetSlide) {
        targetSlide.classList.add('active');
      }

      // Update status bars
      updateStatusBars(slideNumber);

      currentSlide = slideNumber;
    }

    function resetAllBars(activeSlide) {
      console.log('üîÑ Resetting status bars for slide (scale mode):', activeSlide);

      const statusBars = sectionWrapper.querySelectorAll('.status-bar');
      console.log('üìä Found status bars:', statusBars.length);

      statusBars.forEach((bar, index) => {
        const slideNum = index + 1;
        const fill = bar.querySelector('.status-bar-fill');
        if (!fill) {
          console.error('‚ùå Fill element not found for bar:', slideNum);
          return;
        }

        // Stop transition and set base transform
        fill.style.transition = 'none';
        if (slideNum < activeSlide) {
          fill.style.transform = 'scaleX(1)';
        } else {
          fill.style.transform = 'scaleX(0)';
        }
      });
    }

    function animateActiveBar(activeSlide) {
      const activeFill = sectionWrapper.querySelector(`.status-bar[data-slide="${activeSlide}"] .status-bar-fill`);
      if (!activeFill) {
        console.warn('‚ö†Ô∏è Active fill not found for slide:', activeSlide);
        return;
      }

      // Reset to scaleX(0) without transition, then animate to scaleX(1)
      activeFill.style.transition = 'none';
      activeFill.style.transform = 'scaleX(0)';
      void activeFill.offsetWidth; // reflow
      activeFill.style.transition = 'transform 5s linear';
      requestAnimationFrame(() => {
        activeFill.style.transform = 'scaleX(1)';
      });

      // Debug: sample visual width via DOMRect
      setTimeout(() => {
        const r1 = activeFill.getBoundingClientRect();
        console.log('‚è±Ô∏è 1s rect width (px):', r1.width);
      }, 1000);
      setTimeout(() => {
        const r3 = activeFill.getBoundingClientRect();
        console.log('‚è±Ô∏è 3s rect width (px):', r3.width);
      }, 3000);
    }

    function updateStatusBars(activeSlide) {
      resetAllBars(activeSlide);
      animateActiveBar(activeSlide);
    }

    function pauseBarAnimation() {
      const activeBar = sectionWrapper.querySelector(`.status-bar[data-slide="${currentSlide}"] .status-bar-fill`);
      if (!activeBar) return;
      const rect = activeBar.getBoundingClientRect();
      const parentRect = activeBar.parentElement.getBoundingClientRect();
      const progressPct = parentRect.width ? (rect.width / parentRect.width) * 100 : 0;
      activeBar.style.transition = 'none';
      activeBar.style.transform = `scaleX(${Math.min(1, Math.max(0, progressPct / 100))})`;
      console.log('‚è∏Ô∏è Paused at % (scale):', progressPct);
    }

    function resumeBarAnimation() {
      const activeBar = sectionWrapper.querySelector(`.status-bar[data-slide="${currentSlide}"] .status-bar-fill`);
      if (!activeBar) return;
      const rect = activeBar.getBoundingClientRect();
      const parentRect = activeBar.parentElement.getBoundingClientRect();
      const progressPct = parentRect.width ? (rect.width / parentRect.width) * 100 : 0;
      const remainingMs = Math.max(0, 5000 * (1 - progressPct / 100));
      activeBar.style.transition = `transform ${remainingMs}ms linear`;
      requestAnimationFrame(() => {
        activeBar.style.transform = 'scaleX(1)';
      });
      console.log('‚ñ∂Ô∏è Resumed (scale), remaining ms:', remainingMs);
    }

    function nextSlide() {
      const next = currentSlide >= 3 ? 1 : currentSlide + 1;
      showSlide(next);
    }

    function prevSlide() {
      const prev = currentSlide <= 1 ? 3 : currentSlide - 1;
      showSlide(prev);
    }

    function startAutoSlide() {
      autoSlideInterval = setInterval(nextSlide, 5000); // 5 seconds
    }

    function stopAutoSlide() {
      clearInterval(autoSlideInterval);
    }

    // Pause on hover (optional - can be removed if you want continuous auto-slide)
    carousel.addEventListener('mouseenter', () => {
      stopAutoSlide();
      pauseBarAnimation();
    });
    carousel.addEventListener('mouseleave', () => {
      startAutoSlide();
      resumeBarAnimation();
    });

    // Immediately start filling the first bar
    function initializeFirstBar() {
      console.log('üé¨ Initializing first status bar (transition mode)...');
      const firstBar = sectionWrapper.querySelector('.status-bar[data-slide="1"] .status-bar-fill');
      if (!firstBar) {
        console.error('‚ùå First status bar fill element not found');
        return;
      }
      console.log('‚úÖ Found first status bar:', firstBar);
      animateActiveBar(1);
    }

    // Initialize everything
    console.log('üöÄ Starting carousel initialization...');
    showSlide(1);
    startAutoSlide();
    initializeFirstBar();

    // Also trigger animation on load event as backup
    console.log('‚è≥ Setting up load event handler...');
    window.addEventListener('load', () => {
      console.log('üì• Window load event fired, reinitializing first bar...');
      initializeFirstBar();
    });
  });
</script>

{% schema %}
{
  "name": "Custom Carousel",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "üñºÔ∏è Slide 1 - Two Column Layout"
    },
    {
      "type": "paragraph",
      "content": "Upload two images that will be displayed side by side in the first slide."
    },
    {
      "type": "image_picker",
      "id": "slide1_image1",
      "label": "Left Image",
      "info": "Recommended size: 800x600px or larger"
    },
    {
      "type": "image_picker",
      "id": "slide1_image2",
      "label": "Right Image",
      "info": "Recommended size: 800x600px or larger"
    },
    {
      "type": "image_picker",
      "id": "slide1_mobile_image",
      "label": "Mobile Image",
      "info": "Single image for mobile view - Recommended size: 800x1000px or larger"
    },
    {
      "type": "text",
      "id": "slide1_text",
      "label": "Small Text",
      "info": "Optional: Small text displayed at bottom (24px)"
    },
    {
      "type": "text",
      "id": "slide1_title",
      "label": "Title",
      "info": "Optional: Title displayed below small text (48px)"
    },
    {
      "type": "url",
      "id": "slide1_link",
      "label": "Slide 1 Link",
      "info": "Optional: Make this slide clickable by adding a link"
    },
    {
      "type": "header",
      "content": "üñºÔ∏è Slide 2 - Two Column Layout"
    },
    {
      "type": "paragraph",
      "content": "Upload two images that will be displayed side by side in the second slide."
    },
    {
      "type": "image_picker",
      "id": "slide2_image1",
      "label": "Left Image",
      "info": "Recommended size: 800x600px or larger"
    },
    {
      "type": "image_picker",
      "id": "slide2_image2",
      "label": "Right Image",
      "info": "Recommended size: 800x600px or larger"
    },
    {
      "type": "image_picker",
      "id": "slide2_mobile_image",
      "label": "Mobile Image",
      "info": "Single image for mobile view - Recommended size: 800x1000px or larger"
    },
    {
      "type": "text",
      "id": "slide2_text",
      "label": "Small Text",
      "info": "Optional: Small text displayed at bottom (24px)"
    },
    {
      "type": "text",
      "id": "slide2_title",
      "label": "Title",
      "info": "Optional: Title displayed below small text (48px)"
    },
    {
      "type": "url",
      "id": "slide2_link",
      "label": "Slide 2 Link",
      "info": "Optional: Make this slide clickable by adding a link"
    },
    {
      "type": "header",
      "content": "üñºÔ∏è Slide 3 - Full Width Layout"
    },
    {
      "type": "paragraph",
      "content": "Upload one image that will be displayed at full width in the third slide."
    },
    {
      "type": "image_picker",
      "id": "slide3_image",
      "label": "Full Width Image",
      "info": "Recommended size: 1920x1080px or larger for best quality"
    },
    {
      "type": "image_picker",
      "id": "slide3_mobile_image",
      "label": "Mobile Image",
      "info": "Single image for mobile view - Recommended size: 800x1000px or larger"
    },
    {
      "type": "text",
      "id": "slide3_text",
      "label": "Small Text",
      "info": "Optional: Small text displayed at bottom (24px)"
    },
    {
      "type": "text",
      "id": "slide3_title",
      "label": "Title",
      "info": "Optional: Title displayed below small text (48px)"
    },
    {
      "type": "url",
      "id": "slide3_link",
      "label": "Slide 3 Link",
      "info": "Optional: Make this slide clickable by adding a link"
    },
    {
      "type": "header",
      "content": "‚öôÔ∏è Carousel Settings"
    },
    {
      "type": "paragraph",
      "content": "The carousel automatically changes slides every 5 seconds and pauses when you hover over it."
    }
  ],
  "presets": [
    {
      "name": "Custom Carousel",
      "category": "Image"
    }
  ]
}
{% endschema %}
