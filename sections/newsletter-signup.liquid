{{ 'newsletter-signup.css' | asset_url | stylesheet_tag }}

<style>
  .newsletter-signup-section {
    width: 100%;
    padding: 180px 30px 90px 30px;
    margin: 0;
  }

  .newsletter-content {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .newsletter-title {
    font-size: 32px;
    line-height: 1.3;
    margin: 0 0 40px 0;
    color: rgb(var(--color-foreground));
    font-weight: 700;
    letter-spacing: normal;
    text-transform: uppercase;
  }

  /* Force NewEdge666-Rounded with higher specificity */
  .newsletter-signup-section .newsletter-content .newsletter-title {
    font-family: 'NewEdge666-Rounded', Arial, sans-serif !important;
  }

  .newsletter-form {
    position: relative;
    max-width: 600px;
    margin: 0 auto;
  }

  .newsletter-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    background: white;
    border-radius: 50px;
    overflow: hidden;
  }

  .newsletter-email-input {
    width: 100%;
    padding: 18px 120px 18px 28px;
    font-size: 16px;
    border: none;
    background: white;
    color: black;
    font-family: inherit;
    outline: none;
  }

  .newsletter-email-input:focus {
    outline: none;
  }

  .newsletter-email-input::placeholder {
    color: rgba(0, 0, 0, 0.5);
  }

  .newsletter-submit-button {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    padding: 0;
    background: transparent;
    color: black;
    border: none;
    font-size: 16px;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 0;
    cursor: pointer;
    transition: opacity 0.3s ease;
    font-family: inherit;
  }

  .newsletter-submit-button:hover {
    opacity: 0.6;
  }

  .newsletter-message {
    margin-top: 15px;
    font-size: 14px;
    text-align: center;
  }

  .newsletter-message.success {
    color: green;
  }

  .newsletter-message.error {
    color: red;
  }

  @media screen and (max-width: 749px) {
    .newsletter-signup-section {
      padding: 90px 20px 90px 20px;
    }

    .newsletter-title {
      font-size: 24px;
      margin: 0 0 30px 0;
    }

    .newsletter-email-input {
      padding: 16px 100px 16px 24px;
      font-size: 14px;
    }

    .newsletter-submit-button {
      right: 16px;
      font-size: 14px;
    }
  }
</style>

<div class="newsletter-signup-section section" id="section-{{ section.id }}">
  <div class="newsletter-content">
    {%- if section.settings.title != blank -%}
      <h2 class="newsletter-title">{{ section.settings.title }}</h2>
    {%- else -%}
      <h2 class="newsletter-title">From the world of SIMSIM: style, stories, and statements.</h2>
    {%- endif -%}

    <form class="newsletter-form" id="convertkit-form">
      <div class="newsletter-input-wrapper">
        <input
          type="email"
          name="email"
          class="newsletter-email-input"
          placeholder="Enter your email"
          required
          aria-label="Email address"
          id="email-input"
        >
        <button type="submit" class="newsletter-submit-button">Join</button>
      </div>
      <div class="newsletter-message" id="newsletter-message"></div>
    </form>

    <script>
      const CONVERTKIT_FORM_ID = '7753448';
      const CONVERTKIT_API_KEY = 'hrlHwRPE65AwRJj2dWxPLw';

      document.getElementById('convertkit-form').addEventListener('submit', async function (e) {
        e.preventDefault();

        const emailInput = document.getElementById('email-input');
        const messageDiv = document.getElementById('newsletter-message');
        const submitButton = e.target.querySelector('.newsletter-submit-button');

        const email = emailInput.value;

        // Disable button and show loading state
        submitButton.disabled = true;
        submitButton.textContent = 'Joining...';
        messageDiv.textContent = '';
        messageDiv.className = 'newsletter-message';

        try {
          const response = await fetch(`https://api.convertkit.com/v3/forms/${CONVERTKIT_FORM_ID}/subscribe`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              api_key: CONVERTKIT_API_KEY,
              email: email,
            }),
          });

          const data = await response.json();

          if (response.ok) {
            messageDiv.textContent = 'Thanks for subscribing!';
            messageDiv.className = 'newsletter-message success';
            emailInput.value = '';
          } else {
            throw new Error(data.message || 'Something went wrong');
          }
        } catch (error) {
          messageDiv.textContent = error.message || 'An error occurred. Please try again.';
          messageDiv.className = 'newsletter-message error';
        } finally {
          // Re-enable button
          submitButton.disabled = false;
          submitButton.textContent = 'Join';
        }
      });
    </script>
  </div>
</div>

{% schema %}
{
  "name": "Newsletter Signup",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "textarea",
      "id": "title",
      "label": "Title",
      "default": "From the world of SIMSIM: style, stories, and statements."
    }
  ],
  "presets": [
    {
      "name": "Newsletter Signup",
      "category": "Email"
    }
  ]
}
{% endschema %}
