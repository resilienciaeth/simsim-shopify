<style>
  .custom-collection-grid {
    width: 100%;
    box-sizing: border-box;
    padding-left: 0;
    padding-right: 0; /* no side padding on this page */
  }

  .custom-collection-grid__inner {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 0; /* no horizontal separation */
    row-gap: 60px; /* 60px between rows */
  }

  @media screen and (min-width: 1200px) {
    .custom-collection-grid__inner {
      grid-template-columns: repeat(3, 1fr);
      column-gap: 0; /* no horizontal separation */
      row-gap: 60px; /* 60px between rows */
    }

    .custom-collection-grid__info {
      padding: 10px 3rem; /* 10px top/bottom, 30px sides on desktop */
    }
  }

  .custom-collection-grid__card {
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .custom-collection-grid__media {
    width: 100%;
    aspect-ratio: 4 / 5; /* a bit smaller portrait */
    background: #f2f2f2;
    overflow: hidden;
    position: relative;
  }

  .custom-collection-grid__media img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    transition: opacity 450ms ease-in-out;
    will-change: opacity;
    backface-visibility: hidden;
    transform: translateZ(0);
  }

  .custom-collection-grid__img--primary {
    opacity: 1;
  }
  .custom-collection-grid__img--second {
    opacity: 0;
  }

  @media screen and (min-width: 1200px) {
    .custom-collection-grid__card:hover .custom-collection-grid__img--primary {
      opacity: 0;
    }
    .custom-collection-grid__card:hover .custom-collection-grid__img--second {
      opacity: 1;
    }
  }

  .custom-collection-grid__info {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 1.6rem; /* 10px top/bottom, 16px sides on mobile */
  }

  .custom-collection-grid__title {
    margin-top: 0;
    color: #000;
    font-size: 12px;
    text-transform: uppercase;
    padding: 0; /* padding handled by info row */
  }

  .custom-collection-grid__price {
    font-size: 12px;
    color: #000;
    text-transform: uppercase;
    white-space: nowrap;
  }

  /* Toggle bar */
  .custom-collection-grid__toggle {
    display: flex;
    gap: 1rem;
    padding: 0 1.6rem 1.6rem 1.6rem;
  }
  @media screen and (min-width: 1200px) {
    .custom-collection-grid__toggle {
      padding: 0 3rem 1.6rem 3rem;
    }
  }
  .toggle-btn {
    font-size: 12px;
    text-transform: uppercase;
    color: #000;
    background: transparent;
    border: none;
    padding: 0;
    cursor: pointer;
    opacity: 0.5;
  }
  .toggle-btn.is-active {
    opacity: 1;
  }

  /* Mode visibility */
  .custom-collection-grid[data-mode='less'] .mode-more {
    display: none;
  }
  .custom-collection-grid[data-mode='more'] .mode-less {
    display: none;
  }

  /* More mode layout */
  .product-row {
    width: 100%;
    margin-bottom: 60px; /* Same spacing as Less mode */
  }
  .row-media-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 0;
    row-gap: 0;
  }
  @media screen and (min-width: 1200px) {
    .row-media-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  .row-media-tile {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  /* Text positioning for More mode - same as Less mode */
  .row-info-first {
    display: flex;
    justify-content: flex-start;
    padding: 10px 1.6rem;
  }
  .row-info-last {
    display: flex;
    justify-content: flex-end;
    padding: 10px 1.6rem;
  }
  @media screen and (min-width: 1200px) {
    .row-info-first,
    .row-info-last {
      padding: 10px 3rem;
    }
  }

  /* Hide third image on mobile for More mode */
  @media screen and (max-width: 1199px) {
    .row-media-tile:nth-child(3) {
      display: none;
    }
  }

  /* Ensure desktop side padding is exactly 30px */
  @media screen and (min-width: 1200px) {
    .custom-collection-grid__info {
      padding: 10px 3rem;
    }
  }
</style>

<div class="custom-collection-grid" data-mode="less">
  {% liquid
    assign product_list = null
    if collection
      assign product_list = collection.products
    elsif collections.all
      assign product_list = collections.all.products
    endif
  %}
  <div class="custom-collection-grid__toggle">
    <button type="button" class="toggle-btn js-less is-active" aria-pressed="true">Less</button>
    <button type="button" class="toggle-btn js-more" aria-pressed="false">More</button>
  </div>

  <div class="mode-less">
    <div class="custom-collection-grid__inner">
      {% for product in product_list %}
        <a href="{{ product.url }}" class="custom-collection-grid__card" aria-label="{{ product.title | escape }}">
          <div class="custom-collection-grid__media">
            {% if product.featured_image %}
              {{
                product.featured_image
                | image_url: width: 800
                | image_tag:
                  alt: product.title,
                  loading: 'lazy',
                  class: 'custom-collection-grid__img custom-collection-grid__img--primary'
              }}
            {% endif %}
            {% if product.images.size > 1 %}
              {{
                product.images[1]
                | image_url: width: 800
                | image_tag:
                  alt: product.title,
                  loading: 'lazy',
                  class: 'custom-collection-grid__img custom-collection-grid__img--second'
              }}
            {% endif %}
          </div>
          <div class="custom-collection-grid__info">
            <div class="custom-collection-grid__title">{{ product.title }}</div>
            <div class="custom-collection-grid__price">
              {{ product.price | divided_by: 100.0 | round: 0 }}
              {{ localization.country.currency.iso_code | default: shop.currency }}
            </div>
          </div>
        </a>
      {% endfor %}
    </div>
  </div>

  <div class="mode-more">
    {% for product in product_list %}
      <div class="product-row">
        {% liquid
          assign tiles_desktop = 3
          assign tiles_mobile = 2
          assign max_images = product.images.size | at_least: 1
          if max_images > tiles_desktop
            assign max_images = tiles_desktop
          endif
          assign max_index = max_images | minus: 1
        %}
        <div class="row-media-grid">
          {% for i in (0..max_index) %}
            {% assign img = product.images[i] | default: product.featured_image %}
            <a href="{{ product.url }}" class="row-media-tile">
              <div class="custom-collection-grid__media">
                {{ img | image_url: width: 1200 | image_tag: alt: product.title, loading: 'lazy' }}
              </div>
              {% if forloop.first %}
                <div class="row-info-first">
                  <div class="custom-collection-grid__title">{{ product.title }}</div>
                </div>
              {% endif %}
              {% if forloop.last %}
                <div class="row-info-last">
                  <div class="custom-collection-grid__price">
                    {{ product.price | divided_by: 100.0 | round: 0 }}
                    {{ localization.country.currency.iso_code | default: shop.currency }}
                  </div>
                </div>
              {% endif %}
            </a>
          {% endfor %}
        </div>
      </div>
    {% endfor %}
  </div>
</div>

{%- render 'path-topbar' -%}

{% schema %}
{
  "name": "Custom Collection Grid",
  "settings": []
}
{% endschema %}

<script>
  (function () {
    var grid = document.querySelector('.custom-collection-grid');
    if (!grid) return;

    var lessBtn = grid.querySelector('.js-less');
    var moreBtn = grid.querySelector('.js-more');
    if (!lessBtn || !moreBtn) return;

    function setMode(mode) {
      grid.setAttribute('data-mode', mode);
      var isMore = mode === 'more';
      lessBtn.classList.toggle('is-active', !isMore);
      moreBtn.classList.toggle('is-active', isMore);
      lessBtn.setAttribute('aria-pressed', String(!isMore));
      moreBtn.setAttribute('aria-pressed', String(isMore));
    }

    lessBtn.addEventListener('click', function (e) {
      e.preventDefault();
      setMode('less');
    });

    moreBtn.addEventListener('click', function (e) {
      e.preventDefault();
      setMode('more');
    });
  })();
</script>
